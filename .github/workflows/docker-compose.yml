name: Docker Compose CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'app/**'
      - 'components/**'
      - 'api/**'
      - 'contexts/**'
      - 'lib/**'
      - 'package.json'
      - 'package-lock.json'
      - 'next.config.mjs'
      - 'tailwind.config.ts'
      - 'tsconfig.json'
      - 'docker-compose.yml'
      - 'Dockerfile'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'app/**'
      - 'components/**'
      - 'api/**'
      - 'contexts/**'
      - 'lib/**'
      - 'package.json'
      - 'package-lock.json'
      - 'next.config.mjs'
      - 'tailwind.config.ts'
      - 'tsconfig.json'
      - 'docker-compose.yml'
      - 'Dockerfile'
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  FRONTEND_IMAGE: saehe/seoul-bike-frontend
  # 빌드 타임에 박힐 API URL
  NEXT_PUBLIC_SPRING_API_URL: http://43.201.61.111:8080

jobs:
  build-and-push:
    name: 🏗️ Build & Push Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push (latest + sha)
        uses: docker/build-push-action@v5
        with:
          context: .                 # 모노레포면 ./frontend 로 바꿔
          push: true
          tags: |
            ${{ env.FRONTEND_IMAGE }}:latest
            ${{ env.FRONTEND_IMAGE }}:${{ github.sha }}
          build-args: |
            NEXT_PUBLIC_SPRING_API_URL=${{ env.NEXT_PUBLIC_SPRING_API_URL }}

  deploy:
    name: 🚀 Deploy to EC2 Server
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check server secrets
        id: check-secrets
        run: |
          if [ -n "${{ secrets.SERVER_HOST }}" ] && [ -n "${{ secrets.SERVER_USERNAME }}" ] && [ -n "${{ secrets.SERVER_SSH_KEY }}" ]; then
            echo "server_configured=true" >> $GITHUB_OUTPUT
          else
            echo "server_configured=false" >> $GITHUB_OUTPUT
            echo "⚠️ SERVER_HOST / SERVER_USERNAME / SERVER_SSH_KEY 미설정. 배포 스킵"
          fi

      - name: Deploy via SSH (docker-compose)
        if: steps.check-secrets.outputs.server_configured == 'true'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}              # 예: 43.201.61.111
          username: ${{ secrets.SERVER_USERNAME }}      # 예: ubuntu
          key: ${{ secrets.SERVER_SSH_KEY }}            # pem 내용
          script: |
            set -e
            cd /home/saehe/seoul-bike-frontend   # ← 서버에서 compose 파일이 있는 폴더
            # 서버에 'docker compose'가 없으면 아래 두 줄을 'docker-compose'로 바꿔야 함
            docker compose pull frontend
            docker compose up -d --force-recreate --no-deps frontend
            docker image prune -f || true
            curl -fsS -o /dev/null http://127.0.0.1:3000 || true

      - name: Skip deployment
        if: steps.check-secrets.outputs.server_configured == 'false'
        run: echo "🔹 Deployment skipped"
