name: frontend-cicd

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]
  workflow_dispatch:

env:
  NODE_VERSION: "18"
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  NEXT_PUBLIC_SPRING_API_URL: ${{ secrets.NEXT_PUBLIC_SPRING_API_URL }}
  FRONTEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/seoul-bike-frontend
  FRONTEND_CONTEXT: "."  # Dockerfile이 루트 아닐 때는 ./front 로 변경

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.FRONTEND_CONTEXT }}
          push: true
          tags: |
            ${{ env.FRONTEND_IMAGE }}:latest
            ${{ env.FRONTEND_IMAGE }}:${{ github.sha }}
          build-args: |
            NEXT_PUBLIC_SPRING_API_URL=${{ env.NEXT_PUBLIC_SPRING_API_URL }}

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Check server secrets
        id: check
        run: |
          ok=1
          [ -z "${{ secrets.SERVER_HOST }}" ] && echo "SERVER_HOST missing" && ok=0
          [ -z "${{ secrets.SERVER_USERNAME }}" ] && echo "SERVER_USERNAME missing" && ok=0
          [ -z "${{ secrets.SERVER_SSH_KEY }}" ] && echo "SERVER_SSH_KEY missing" && ok=0
          if [ "$ok" = "1" ]; then echo "server_configured=true" >> $GITHUB_OUTPUT; else echo "server_configured=false" >> $GITHUB_OUTPUT; fi

      - name: Deploy via SSH (docker-compose)
        if: steps.check.outputs.server_configured == 'true'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.Server_USERNAME || secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -e
            cd ~/app
            docker-compose pull frontend
            docker-compose up -d --force-recreate --no-deps frontend
            docker image prune -f || true
            curl -I http://127.0.0.1:3000 || true
